//asas
programa 	: variables subprogramas instrucciones 
	;

//=============================   variables  ===============================================

variables 	: VARIABLES (vars COLON tipo PyC)*
	;

vars 		:  VAR COMA vars
		| VAR
	;

tipo		: elemental | no_elemental
	;

elemtental	: NUM | LOG
	;

no_elemental: SEQ PA elemental PC                              // SEQ(NUM) ???? O SEQ ?????Ambas son viables, dependerá si se trata como un bloque o no.
	;


//==============================  subprogramas  =============================================

subprogramas 	: SUBPROGRAMAS (funciones | procedimientos)*
	;


funciones 	: FUNCION (VAR PA param_func_e PC DEV PA param_func_s PC PyC)*

param_func_e	: tipo VAR COMA param_func_e
		  | tipo VAR
		  | ()  //¿Como se expresa el vacio?   vacio === () | ()?
	;


procedimientos	: PROCEDIMIENTO (VAR PA parametros_proc PC PYC)*
	;

parametros_proc	: tipo VAR COMA parametros_proc
		  | (tipo VAR)? 
	;
		

//===================================== INSTRUCCIONES ================================================

//El lenguaje P también dispone de comentarios de línea (//) y de bloque (/* */)  ---> Se declará en análisis léxico

instrucciones	: INSTRUCCIONES (instruccion PyC)*
	;

instruccion	: (asignacion | condicional | iteracion |  ruptura | llamadaPoF | functionReturn | printConsola | aserto)
	;

asignacion	: (ident_asign ASIGN expr_asign PyC)*
	;

ident_asign	: VAR COMA ident_asign
		  | VAR
	;


expr_asign	: (expr_int | expr_log | expr_seq )
	;

expr_int	: NUM
		     |VAR
		     |VAR CA expr_int CC                        //s[i+1]
		     |expr_int COMA expr_int
		     | expr_int (POR | MAS | MENOS ) expr_int
	;

expr_log	: (TRUE | FALSE)
		      |VAR
	;

expr_seq	: VAR
		     | CA (contenido_seq)? CC
	;

contenido_seq	: expr_int (COMA expr_int)*
		         |expr_log (COMA expr_log)*
	;




//CONDICIONAL

condicional	: (SI PA condicion PC ENTONCES asignacion (SINO asignacion)? FSI)*			//asignacion se puede?  var = funcion ???
	;

condicion	: var1_cond op_log_cond var2_cond ((AND | OR | NOT) condicion)?       //(....) ?  : concatenar condiciones
	;

var1_cond	: VAR
		 | NUM
		 | VAR CA ind_seq CC
	;

ind_seq		: NUM
		 | VAR
		 | ind_seq (POR | MAS | MENOS) ind_seq
	;


op_log_cond	: ( IGUALDAD | DESIGUALDAD | MENOR | MAYOR | MENORQUE | MAYORQUE )
	;



//ITERACION


iteracion	: MIENTRAS PA condicion PC HACER (asignacion | condicional)* FMIENTRAS

//RUPTURA

















  
